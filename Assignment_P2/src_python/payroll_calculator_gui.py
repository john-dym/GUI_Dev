"""
Created by: John Morales
Class: GUI Development
Assignment: Assignment P2

Python Version: 3.12
"""
#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Feb 26, 2024 08:29:43 PM EST  platform: Windows NT

import sys
import tkinter as tk
from tkinter import messagebox
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path
from PIL import ImageTk, Image
import payroll_calculator
from re import fullmatch

_location = os.path.dirname(__file__)

import payroll_calculator_gui_support

_bgcolor = '#ffffff'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 
_image_folder = "images/"
_money_re = "[0-9]*['.']?[0-9]*"

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("800x575+861+312")
        top.minsize(120, 1)
        top.maxsize(2756, 2033)
        top.resizable(1,  1)
        top.title("Payroll Every Two Weeks")
        top.configure(background=_bgcolor)
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top
        self.lblFICAOut = tk.StringVar()
        self.lblFederalTaxOut = tk.StringVar()
        self.lblNetIncomeOut = tk.StringVar()
        self.lblStateTaxOut = tk.StringVar()
        self.GrossPayInput = tk.StringVar()

        self.frmInputOutput = tk.Frame(self.top)
        self.frmInputOutput.place(relx=0.0, rely=0.452, relheight=0.565, relwidth=1.006)
        self.frmInputOutput.configure(relief='flat')
        self.frmInputOutput.configure(borderwidth="2")
        self.frmInputOutput.configure(background="#d9d9d9")
        self.frmInputOutput.configure(highlightbackground="#d9d9d9")
        self.frmInputOutput.configure(highlightcolor="#000000")

        #Buttons
        self.btnClear = tk.Button(self.frmInputOutput)
        self.btnClear.place(relx=0.447, rely=0.338, height=36, width=130)
        self.btnClear.configure(activebackground="#d9d9d9")
        self.btnClear.configure(activeforeground="black")
        self.btnClear.configure(background="#0290fe")
        self.btnClear.configure(disabledforeground="#a3a3a3")
        self.btnClear.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.btnClear.configure(foreground="#ffffff")
        self.btnClear.configure(highlightbackground="#d9d9d9")
        self.btnClear.configure(highlightcolor="#000000")
        self.btnClear.configure(text='''Clear''')
        self.btnClear.configure(command=self.ClearForm)

        self.btnComputeTaxes = tk.Button(self.frmInputOutput)
        self.btnComputeTaxes.place(relx=0.186, rely=0.338, height=36, width=130)
        self.btnComputeTaxes.configure(activebackground="#d9d9d9")
        self.btnComputeTaxes.configure(activeforeground="black")
        self.btnComputeTaxes.configure(background="#0290fe")
        self.btnComputeTaxes.configure(disabledforeground="#a3a3a3")
        self.btnComputeTaxes.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.btnComputeTaxes.configure(foreground="#ffffff")
        self.btnComputeTaxes.configure(highlightbackground="#d9d9d9")
        self.btnComputeTaxes.configure(highlightcolor="#000000")
        self.btnComputeTaxes.configure(text='''Compute Taxes''')
        self.btnComputeTaxes.configure(command=self.Calculate)

        self.btnExit = tk.Button(self.frmInputOutput)
        self.btnExit.place(relx=0.683, rely=0.338, height=36, width=130)
        self.btnExit.configure(activebackground="#d9d9d9")
        self.btnExit.configure(activeforeground="black")
        self.btnExit.configure(background="#0290fe")
        self.btnExit.configure(disabledforeground="#a3a3a3")
        self.btnExit.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.btnExit.configure(foreground="#ffffff")
        self.btnExit.configure(highlightbackground="#d9d9d9")
        self.btnExit.configure(highlightcolor="#000000")
        self.btnExit.configure(text='''Exit''')
        self.btnExit.configure(command=quit)

        self.Label4 = tk.Label(self.frmInputOutput)
        self.Label4.place(relx=0.671, rely=0.585, height=31, width=94)
        self.Label4.configure(activebackground="#d9d9d9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="#000000")
        self.Label4.configure(text='''State Tax:''')

        self.Label3 = tk.Label(self.frmInputOutput)
        self.Label3.place(relx=0.385, rely=0.585, height=31, width=94)
        self.Label3.configure(activebackground="#d9d9d9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="#000000")
        self.Label3.configure(text='''Federal Tax:''')

        self.Label5 = tk.Label(self.frmInputOutput)
        self.Label5.place(relx=0.211, rely=0.738, height=41, width=234)
        self.Label5.configure(activebackground="#d9d9d9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(compound='left')
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="#000000")
        self.Label5.configure(text='''Net Paycheck Income:''')

        self.Label2 = tk.Label(self.frmInputOutput)
        self.Label2.place(relx=0.199, rely=0.585, height=31, width=45)
        self.Label2.configure(activebackground="#d9d9d9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="#000000")
        self.Label2.configure(text='''FICA:''')

        self.Label7 = tk.Label(self.frmInputOutput)
        self.Label7.place(relx=0.286, rely=0.585, height=31, width=65)
        self.Label7.configure(activebackground="#d9d9d9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(anchor='w')
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(compound='left')
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="#000000")
        self.Label7.configure(textvariable=self.lblFICAOut)

        self.Label8 = tk.Label(self.frmInputOutput)
        self.Label8.place(relx=0.534, rely=0.585, height=31, width=84)
        self.Label8.configure(activebackground="#d9d9d9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(anchor='w')
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(compound='left')
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="#000000")
        self.Label8.configure(textvariable=self.lblFederalTaxOut)

        self.Label6 = tk.Label(self.frmInputOutput)
        self.Label6.place(relx=0.547, rely=0.738, height=41, width=174)
        self.Label6.configure(activebackground="#d9d9d9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(compound='left')
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="#000000")
        self.Label6.configure(textvariable=self.lblNetIncomeOut)

        self.Label1 = tk.Label(self.frmInputOutput)
        self.Label1.place(relx=0.236, rely=0.123, height=41, width=232)
        self.Label1.configure(activebackground="#d9d9d9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 20 -weight bold")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="#000000")
        self.Label1.configure(text='''Enter Gross Pay:''')

        self.Label9 = tk.Label(self.frmInputOutput)
        self.Label9.place(relx=0.795, rely=0.585, height=31, width=94)
        self.Label9.configure(activebackground="#d9d9d9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(anchor='w')
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(compound='left')
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="#000000")
        self.Label9.configure(textvariable=self.lblStateTaxOut)

        self.EntryGrossPay = tk.Entry(self.frmInputOutput)
        self.EntryGrossPay.place(relx=0.534, rely=0.123, height=40, relwidth=0.216)
        self.EntryGrossPay.configure(background="white")
        self.EntryGrossPay.configure(disabledforeground="#a3a3a3")
        self.EntryGrossPay.configure(font="-family {Arial} -size 14")
        self.EntryGrossPay.configure(foreground="#000000")
        self.EntryGrossPay.configure(highlightbackground="#d9d9d9")
        self.EntryGrossPay.configure(highlightcolor="#000000")
        self.EntryGrossPay.configure(insertbackground="#000000")
        self.EntryGrossPay.configure(selectbackground="#d9d9d9")
        self.EntryGrossPay.configure(selectforeground="black")
        self.EntryGrossPay.configure(textvariable=self.GrossPayInput)

        self.HeaderFrame = tk.Frame(self.top)
        self.HeaderFrame.place(relx=0.0, rely=-0.017, relheight=0.478
                , relwidth=1.006)
        self.HeaderFrame.configure(relief='flat')
        self.HeaderFrame.configure(borderwidth="2")
        self.HeaderFrame.configure(background="#d9d9d9")
        self.HeaderFrame.configure(highlightbackground="#d9d9d9")
        self.HeaderFrame.configure(highlightcolor="#000000")

        self.picPayroll = tk.Label(self.HeaderFrame)
        self.picPayroll.place(relx=-0.012, rely=-0.036, relheight=1.065, relwidth=0.513)
        self.picPayroll.configure(background="#d9d9d9")
        self.picPayroll.configure(borderwidth="2")
        self.picPayroll.configure(highlightbackground="#d9d9d9")
        self.picPayroll.configure(highlightcolor="#000000")
        with Image.open(_image_folder + "payroll.jpg") as payroll_image:
            photo = ImageTk.PhotoImage(payroll_image.resize((413, 293)))
            self.picPayroll.configure(image=photo)
            self.picPayroll.image = photo

        self.ProgramTitle = tk.Label(self.HeaderFrame)
        self.ProgramTitle.place(relx=0.509, rely=0.109, height=51, width=393)
        self.ProgramTitle.configure(activebackground="#d9d9d9")
        self.ProgramTitle.configure(activeforeground="black")
        self.ProgramTitle.configure(background="#d9d9d9")
        self.ProgramTitle.configure(compound='left')
        self.ProgramTitle.configure(disabledforeground="#a3a3a3")
        self.ProgramTitle.configure(font="-family {Cooper Black} -size 24 -weight bold")
        self.ProgramTitle.configure(foreground="#000000")
        self.ProgramTitle.configure(highlightbackground="#d9d9d9")
        self.ProgramTitle.configure(highlightcolor="#000000")
        self.ProgramTitle.configure(text='''Payroll Calculator''')

        self.ProgramDescription = tk.Label(self.HeaderFrame)
        self.ProgramDescription.place(relx=0.509, rely=0.4, height=61, width=393)

        self.ProgramDescription.configure(activebackground="#d9d9d9")
        self.ProgramDescription.configure(activeforeground="black")
        self.ProgramDescription.configure(background="#d9d9d9")
        self.ProgramDescription.configure(compound='left')
        self.ProgramDescription.configure(disabledforeground="#a3a3a3")
        self.ProgramDescription.configure(font="-family {Cooper Black} -size 18 -weight bold")
        self.ProgramDescription.configure(foreground="#000000")
        self.ProgramDescription.configure(highlightbackground="#d9d9d9")
        self.ProgramDescription.configure(highlightcolor="#000000")
        self.ProgramDescription.configure(text='''Paycheck\nCalculation''')

    def Calculate(self):
        user_input = self.ValidateInput()
        if user_input != "":
            results = payroll_calculator.calculate_net_income(user_input)
            self.lblStateTaxOut.set(results[0])
            self.lblFICAOut.set(results[1])
            self.lblFederalTaxOut.set(results[2])
            self.lblNetIncomeOut.set(results[3])

    def ClearCalculatedData(self):
        self.lblStateTaxOut.set("")
        self.lblFICAOut.set("")
        self.lblFederalTaxOut.set("")
        self.lblNetIncomeOut.set("")

    def ClearForm(self):
        self.GrossPayInput.set("")
        self.ClearCalculatedData()
        # self.EntryGrossPay.focus

    def ValidateInput(self):
        re_check = fullmatch(_money_re, self.GrossPayInput.get())
        if re_check:
            return re_check.string
        else:
            self.InvalidInput()
            return ""

    def InvalidInput(self):
        messagebox.showerror("Error", "Gross pay is not in the correct format. Only accepts a decimal number. i.e. 1000.00")
        self.ClearForm()


def start_up():
    payroll_calculator_gui_support.main()

if __name__ == '__main__':
    payroll_calculator_gui_support.main()




