#P3 - Catering App
#Author: John Morales - https://github.com/john-dym
#Class: GUI Development

#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Mar 30, 2024 06:33:38 PM EDT  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path
import gui_tools

_location = os.path.dirname(__file__)

import cater_support

_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40'
_default_win_size = "600x450"
_platter_image_path = "images/platter.jpg"

class frmCatering:

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        app_size_pos = gui_tools.windows_geometry(top, _default_win_size)
        top.geometry(app_size_pos)
        top.minsize(120, 1)
        top.maxsize(2740, 1055)
        top.resizable(1,  1)
        top.title("Catering")
        top.configure(background="#f5deb5")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top
        self.fldPoints = tk.StringVar()
        self.selectedFood = tk.IntVar(value=1)
        self.selectedPay = tk.IntVar(value=1)

        self.btnCalculate = tk.Button(self.top)
        self.btnCalculate.place(relx=0.583, rely=0.778, height=26, width=87)
        self.btnCalculate.configure(activebackground="#d9d9d9")
        self.btnCalculate.configure(activeforeground="black")
        self.btnCalculate.configure(background="#f5deb5")
        self.btnCalculate.configure(disabledforeground="#a3a3a3")
        self.btnCalculate.configure(font="-family {Segoe UI} -size 11 -weight bold")
        self.btnCalculate.configure(foreground="#000000")
        self.btnCalculate.configure(highlightbackground="#d9d9d9")
        self.btnCalculate.configure(highlightcolor="#000000")
        self.btnCalculate.configure(relief="groove")
        self.btnCalculate.configure(text='''Calculate''')
        self.btnCalculate.configure(command=self.b_calculate)

        self.btnClear = tk.Button(self.top)
        self.btnClear.place(relx=0.767, rely=0.778, height=26, width=87)
        self.btnClear.configure(activebackground="#d9d9d9")
        self.btnClear.configure(activeforeground="black")
        self.btnClear.configure(background="#f5deb5")
        self.btnClear.configure(disabledforeground="#a3a3a3")
        self.btnClear.configure(font="-family {Segoe UI} -size 11 -weight bold")
        self.btnClear.configure(foreground="#000000")
        self.btnClear.configure(highlightbackground="#d9d9d9")
        self.btnClear.configure(highlightcolor="#000000")
        self.btnClear.configure(relief="groove")
        self.btnClear.configure(text='''Clear''')
        self.btnClear.configure(command=self.b_clear)

        self.EntryLoyaltyPoints = tk.Entry(self.top)
        self.EntryLoyaltyPoints.place(relx=0.817, rely=0.489, height=30
                , relwidth=0.09)
        self.EntryLoyaltyPoints.configure(background="white")
        self.EntryLoyaltyPoints.configure(disabledforeground="#a3a3a3")
        self.EntryLoyaltyPoints.configure(font="-family {Courier New} -size 12")
        self.EntryLoyaltyPoints.configure(foreground="#000000")
        self.EntryLoyaltyPoints.configure(highlightbackground="#d9d9d9")
        self.EntryLoyaltyPoints.configure(highlightcolor="#000000")
        self.EntryLoyaltyPoints.configure(insertbackground="#000000")
        self.EntryLoyaltyPoints.configure(justify='center')
        self.EntryLoyaltyPoints.configure(selectbackground="#d9d9d9")
        self.EntryLoyaltyPoints.configure(selectforeground="black")
        self.EntryLoyaltyPoints.configure(textvariable=self.fldPoints)

        self.lblPoints = tk.Label(self.top)
        self.lblPoints.place(relx=0.6, rely=0.467, height=51, width=114)
        self.lblPoints.configure(activebackground="#f5deb5")
        self.lblPoints.configure(activeforeground="black")
        self.lblPoints.configure(anchor='w')
        self.lblPoints.configure(background="#f5deb5")
        self.lblPoints.configure(compound='left')
        self.lblPoints.configure(disabledforeground="#a3a3a3")
        self.lblPoints.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.lblPoints.configure(foreground="#000000")
        self.lblPoints.configure(highlightbackground="#d9d9d9")
        self.lblPoints.configure(highlightcolor="#000000")
        self.lblPoints.configure(text='''Loyalty Points''')

        self.lblTitle = tk.Label(self.top)
        self.lblTitle.place(relx=0.183, rely=0.022, height=31, width=124)
        self.lblTitle.configure(activebackground="#f5deb5")
        self.lblTitle.configure(activeforeground="black")
        self.lblTitle.configure(background="#f5deb5")
        self.lblTitle.configure(compound='center')
        self.lblTitle.configure(disabledforeground="#a3a3a3")
        self.lblTitle.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.lblTitle.configure(foreground="#000000")
        self.lblTitle.configure(highlightbackground="#d9d9d9")
        self.lblTitle.configure(highlightcolor="#000000")
        self.lblTitle.configure(text='''Catering''')

        self.lblStore = tk.Label(self.top)
        self.lblStore.place(relx=0.183, rely=0.089, height=31, width=124)
        self.lblStore.configure(activebackground="#f5deb5")
        self.lblStore.configure(activeforeground="black")
        self.lblStore.configure(background="#f5deb5")
        self.lblStore.configure(compound='center')
        self.lblStore.configure(disabledforeground="#a3a3a3")
        self.lblStore.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.lblStore.configure(foreground="#000000")
        self.lblStore.configure(highlightbackground="#d9d9d9")
        self.lblStore.configure(highlightcolor="#000000")
        self.lblStore.configure(text='''Star Market''')

        self.lblPicture = tk.Label(self.top)
        self.lblPicture.place(relx=0.567, rely=0.022, height=181, width=254)
        self.lblPicture.configure(activebackground="#d9d9d9")
        self.lblPicture.configure(activeforeground="black")
        self.lblPicture.configure(anchor='center')
        self.lblPicture.configure(background="#d9d9d9")
        self.lblPicture.configure(compound='left')
        self.lblPicture.configure(disabledforeground="#a3a3a3")
        self.lblPicture.configure(font="-family {Segoe UI} -size 9")
        self.lblPicture.configure(foreground="#000000")
        self.lblPicture.configure(highlightbackground="#d9d9d9")
        self.lblPicture.configure(highlightcolor="#000000")
        self.lblPicture.configure(text='''Label''')

        self.FrameFoodChoice = tk.Frame(self.top)
        self.FrameFoodChoice.place(relx=0.05, rely=0.178, relheight=0.367
                , relwidth=0.475)
        self.FrameFoodChoice.configure(relief='flat')
        self.FrameFoodChoice.configure(borderwidth="2")
        self.FrameFoodChoice.configure(background="#fdf7e7")
        self.FrameFoodChoice.configure(highlightbackground="#d9d9d9")
        self.FrameFoodChoice.configure(highlightcolor="#000000")

        self.radioFood01 = tk.Radiobutton(self.FrameFoodChoice)
        self.radioFood01.place(relx=0.035, rely=0.061, relheight=0.115
                , relwidth=0.905)
        self.radioFood01.configure(activebackground="#d9d9d9")
        self.radioFood01.configure(activeforeground="black")
        self.radioFood01.configure(anchor='w')
        self.radioFood01.configure(background="#fdf7e7")
        self.radioFood01.configure(compound='left')
        self.radioFood01.configure(disabledforeground="#a3a3a3")
        self.radioFood01.configure(font="-family {Courier New} -size 10")
        self.radioFood01.configure(foreground="#000000")
        self.radioFood01.configure(highlightbackground="#d9d9d9")
        self.radioFood01.configure(highlightcolor="#000000")
        self.radioFood01.configure(justify='left')
        self.radioFood01.configure(text='''Radio''')
        self.radioFood01.configure(variable=self.selectedFood)
        self.radioFood01.configure(value=1)

        self.radioFood02 = tk.Radiobutton(self.FrameFoodChoice)
        self.radioFood02.place(relx=0.035, rely=0.242, relheight=0.115
                , relwidth=0.905)
        self.radioFood02.configure(activebackground="#d9d9d9")
        self.radioFood02.configure(activeforeground="black")
        self.radioFood02.configure(anchor='w')
        self.radioFood02.configure(background="#fdf7e7")
        self.radioFood02.configure(compound='left')
        self.radioFood02.configure(disabledforeground="#a3a3a3")
        self.radioFood02.configure(font="-family {Courier New} -size 10")
        self.radioFood02.configure(foreground="#000000")
        self.radioFood02.configure(highlightbackground="#d9d9d9")
        self.radioFood02.configure(highlightcolor="#000000")
        self.radioFood02.configure(justify='left')
        self.radioFood02.configure(text='''Radio''')
        self.radioFood02.configure(variable=self.selectedFood)
        self.radioFood02.configure(value=2)

        self.radioFood03 = tk.Radiobutton(self.FrameFoodChoice)
        self.radioFood03.place(relx=0.035, rely=0.424, relheight=0.115
                , relwidth=0.905)
        self.radioFood03.configure(activebackground="#d9d9d9")
        self.radioFood03.configure(activeforeground="black")
        self.radioFood03.configure(anchor='w')
        self.radioFood03.configure(background="#fdf7e7")
        self.radioFood03.configure(compound='left')
        self.radioFood03.configure(disabledforeground="#a3a3a3")
        self.radioFood03.configure(font="-family {Courier New} -size 10")
        self.radioFood03.configure(foreground="#000000")
        self.radioFood03.configure(highlightbackground="#d9d9d9")
        self.radioFood03.configure(highlightcolor="#000000")
        self.radioFood03.configure(justify='left')
        self.radioFood03.configure(text='''Radio''')
        self.radioFood03.configure(variable=self.selectedFood)
        self.radioFood03.configure(value=3)

        self.radioFood04 = tk.Radiobutton(self.FrameFoodChoice)
        self.radioFood04.place(relx=0.035, rely=0.606, relheight=0.115
                , relwidth=0.905)
        self.radioFood04.configure(activebackground="#d9d9d9")
        self.radioFood04.configure(activeforeground="black")
        self.radioFood04.configure(anchor='w')
        self.radioFood04.configure(background="#fdf7e7")
        self.radioFood04.configure(compound='left')
        self.radioFood04.configure(disabledforeground="#a3a3a3")
        self.radioFood04.configure(font="-family {Courier New} -size 10")
        self.radioFood04.configure(foreground="#000000")
        self.radioFood04.configure(highlightbackground="#d9d9d9")
        self.radioFood04.configure(highlightcolor="#000000")
        self.radioFood04.configure(justify='left')
        self.radioFood04.configure(text='''Radio''')
        self.radioFood04.configure(variable=self.selectedFood)
        self.radioFood04.configure(value=4)

        self.radioFood05 = tk.Radiobutton(self.FrameFoodChoice)
        self.radioFood05.place(relx=0.035, rely=0.788, relheight=0.115
                , relwidth=0.905)
        self.radioFood05.configure(activebackground="#d9d9d9")
        self.radioFood05.configure(activeforeground="black")
        self.radioFood05.configure(anchor='w')
        self.radioFood05.configure(background="#fdf7e7")
        self.radioFood05.configure(compound='left')
        self.radioFood05.configure(disabledforeground="#a3a3a3")
        self.radioFood05.configure(font="-family {Courier New} -size 10")
        self.radioFood05.configure(foreground="#000000")
        self.radioFood05.configure(highlightbackground="#d9d9d9")
        self.radioFood05.configure(highlightcolor="#000000")
        self.radioFood05.configure(justify='left')
        self.radioFood05.configure(text='''Radio''')
        self.radioFood05.configure(variable=self.selectedFood)
        self.radioFood05.configure(value=5)

        self.Label3 = tk.Label(self.top)
        self.Label3.place(relx=0.15, rely=0.867, height=31, width=124)
        self.Label3.configure(activebackground="#d9d9d9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#f5deb5")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="#000000")
        self.Label3.configure(text='''Please Pay:''')

        self.FramePayChoice = tk.Frame(self.top)
        self.FramePayChoice.place(relx=0.133, rely=0.6, relheight=0.167
                , relwidth=0.308)
        self.FramePayChoice.configure(relief='flat')
        self.FramePayChoice.configure(borderwidth="2")
        self.FramePayChoice.configure(background="#fdf7e7")
        self.FramePayChoice.configure(highlightbackground="#d9d9d9")
        self.FramePayChoice.configure(highlightcolor="#000000")

        self.radioPay01 = tk.Radiobutton(self.FramePayChoice)
        self.radioPay01.place(relx=0.054, rely=0.133, relheight=0.253
                , relwidth=0.854)
        self.radioPay01.configure(activebackground="#d9d9d9")
        self.radioPay01.configure(activeforeground="black")
        self.radioPay01.configure(anchor='w')
        self.radioPay01.configure(background="#fdf7e7")
        self.radioPay01.configure(compound='left')
        self.radioPay01.configure(disabledforeground="#a3a3a3")
        self.radioPay01.configure(font="-family {Courier New} -size 10")
        self.radioPay01.configure(foreground="#000000")
        self.radioPay01.configure(highlightbackground="#d9d9d9")
        self.radioPay01.configure(highlightcolor="#000000")
        self.radioPay01.configure(justify='left')
        self.radioPay01.configure(text='''Pre-Pay''')
        self.radioPay01.configure(variable=self.selectedPay)
        self.radioPay01.configure(value=1)

        self.radioPay02 = tk.Radiobutton(self.FramePayChoice)
        self.radioPay02.place(relx=0.054, rely=0.533, relheight=0.253
                , relwidth=0.854)
        self.radioPay02.configure(activebackground="#d9d9d9")
        self.radioPay02.configure(activeforeground="black")
        self.radioPay02.configure(anchor='w')
        self.radioPay02.configure(background="#fdf7e7")
        self.radioPay02.configure(compound='left')
        self.radioPay02.configure(disabledforeground="#a3a3a3")
        self.radioPay02.configure(font="-family {Courier New} -size 10")
        self.radioPay02.configure(foreground="#000000")
        self.radioPay02.configure(highlightbackground="#d9d9d9")
        self.radioPay02.configure(highlightcolor="#000000")
        self.radioPay02.configure(justify='left')
        self.radioPay02.configure(text='''Pay upon Pickup''')
        self.radioPay02.configure(variable=self.selectedPay)
        self.radioPay02.configure(value=2)

        # Section to edit radio labels
        self.radioFood01.configure(text="Gourmet Cheese $49.99")
        self.radioFood02.configure(text="Pinwheel Wraps $59.99")
        self.radioFood03.configure(text="Veggie $29.99")
        self.radioFood04.configure(text="Sausage and Cheese $49.99")
        self.radioFood05.configure(text="Fruit $29.99")

    def b_clear(self):
        # Clears input and output and sets default values
        self.fldPoints.set("")
        self.selectedPay.set(1)
        self.selectedFood.set(1)

    def b_calculate(self):
        pass

    def validate_input(self):
        input = self.fldPoints.get()
        input_match = gui_tools.validate_int_input(input)

        if input_match:
            #input is a valid integer
            int_value = int(input_match)

            if int_value >= 0:
                return int_value
            else:
                self.negative_number_error()
                return None
        else:
            self.invalid_number_input_error()
            return None
    def invalid_number_input_error(self):
        title = "Invalid input Error"
        message = "Please enter a valid number."
        gui_tools.error_message(title, message)
        self.b_clear()

    def negative_number_error(self):
        title = "Negative Number Error"
        message = "Please enter a positive number."
        gui_tools.error_message(title, message)
        self.b_clear()

def start_up():
    cater_support.main()

if __name__ == '__main__':
    cater_support.main()




